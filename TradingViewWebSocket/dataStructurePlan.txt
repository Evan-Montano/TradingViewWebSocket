.bin
[node][node][node]...
Each node contains the full candle data for a given key. Append-only structure.

node:
property                size
----------------------------------------
key                     16 bytes (fixed-length string, padded if needed)
frequency               4 bytes int
open                    8 bytes double
high                    8 bytes double
low                     8 bytes double
close                   8 bytes double
volume                  8 bytes double
topWick                 8 bytes double
bottomWick              8 bytes double
candleBodySize          8 bytes double
minutesSinceMarketOpen  8 bytes double
delta                   8 bytes double
percentage              8 bytes double

Total per node: 16 + 4 + (4 * 10) = 60 bytes


.idx
[index][index][index]...
Index file maps keys to positions in the .bin file. Also append-only.

index:
property                size
----------------------------------------
key                     16 bytes (fixed-length string)
position                8 bytes long (offset into .bin file)
parentKey               16 bytes (fixed-length string)

Total per index entry: 16 + 8 + 16 = 40 bytes

Notes:
- Both files are raw binary format (written using streams, no serialization layer).
- Keys are fixed-length (16 bytes), allowing direct reads and alignment.
- Children are not stored directly; instead, parentKey allows child lookups by scanning forward in the index file.
- The assumption is that children always occur after their parent in the .idx file.
- This design allows efficient appends without rewriting existing data.
- During loading, the index can be scanned once into an in-memory map or partially cached as needed.
